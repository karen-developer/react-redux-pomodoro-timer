{"version":3,"sources":["actions/index.js","components/LengthController.js","components/TimerWrapper.js","components/Footer.js","components/Pomodoro.js","App.js","reducers/secondsLeft.js","reducers/sessionLength.js","reducers/breakLength.js","reducers/isOn.js","reducers/mode.js","reducers/index.js","index.js"],"names":["setSeconds","number","type","payload","LengthController","props","isOn","useSelector","state","isBreak","breakLength","sessionLength","dispatch","useDispatch","currentVal","mode","lengthSetter","val","newVal","setSession","className","id","value","onClick","TimerWrapper","globalState","beep","useRef","useEffect","secondsLeft","interval","setInterval","clearInterval","current","currentTime","play","seconds","String","Math","floor","padStart","pause","ref","preload","src","Footer","class","href","target","Pomodoro","Provider","top","App","timerReducer","action","sessionReducer","breakReducer","activeReducer","modeReducer","allReducers","combineReducers","secondsReducer","store","createStore","undefined","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b85e998.chunk.js","sourcesContent":["\nexport const enable = () => ({type: 'ENABLE'});\nexport const disable = () => ({type: 'DISABLE'});\nexport const modeSession = () => ({type: 'MODE-SESSION'});\nexport const modeBreak = () => ({type: 'MODE-BREAK'});\nexport const reset = () => ({type: 'RESET'});\n\nexport const setSession = (number) => {\n    return {\n        type: 'SESSION',\n        payload: number\n    }\n};\n\nexport const setBreak = (number) => {\n    return {\n        type: 'BREAK',\n        payload: number\n    }\n};\n\nexport const setSeconds = (number) => {\n    return {\n        type: 'SECONDS',\n        payload: number\n    }\n};\n","import React from 'react';\nimport { AiFillCaretUp, AiFillCaretDown } from \"react-icons/ai\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setSession, setBreak, setSeconds } from '../actions';\n\nexport function LengthController(props) {\n\n    const isOn = useSelector(state => state.isOn);\n    const isBreak = useSelector(state => state.isBreak);\n    const breakLength = useSelector(state => state.breakLength);\n    const sessionLength = useSelector(state => state.sessionLength);\n    const dispatch = useDispatch();\n    const currentVal = (props.mode === 'break' ? breakLength : sessionLength);\n\n    const lengthSetter = (type, val) => {\n        if (!isOn) {\n            \n            const newVal = currentVal + val;\n            if (newVal >= 1 && newVal <= 60) {               \n                if ((isBreak && props.mode === 'break') || (!isBreak && props.mode === 'session')) {\n                    dispatch(setSeconds(newVal * 60));\n                }\n                if (props.mode === 'break') {\n                    dispatch(setBreak(newVal));\n                } else {\n                    dispatch(setSession(newVal))\n                }\n            }\n        }\n    }\n\n    return (\n        <div className=\"length-control\">\n            <div id={props.mode + \"-label\"}>{props.mode}</div>\n            <button id={props.mode + \"-increment\"} value=\"+\" onClick={() => lengthSetter(props.mode + 'Length', 1)}><AiFillCaretUp /></button>\n            <div id={props.mode + \"-length\"}>{currentVal}</div>\n            <button id={props.mode + \"-decrement\"} value=\"-\" onClick={() => lengthSetter(props.mode + 'Length', -1)}><AiFillCaretDown /></button>\n        </div>\n    )\n}","import React, { useEffect, useRef } from 'react';\nimport { IoIosPlay, IoMdPause, IoIosRefresh } from 'react-icons/io';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { enable, disable, reset, setSeconds, modeSession, modeBreak } from '../actions';\n\nfunction getFormattedTime(seconds) {\n    return `${String(Math.floor(seconds / 60)).padStart(2, '0')}:${String(seconds % 60).padStart(2, '0')}`;\n}\n\nexport function TimerWrapper() {\n\n    const globalState = useSelector(state => state);\n    const dispatch = useDispatch();\n    const beep = useRef(null);\n\n    useEffect(() => {\n        if (globalState.isOn && globalState.secondsLeft > 0) {\n            const interval = setInterval(() => {\n                dispatch(setSeconds(globalState.secondsLeft - 1));\n            }, 1000);\n            return () => clearInterval(interval);\n        } else if (globalState.secondsLeft <= 0) {\n            beep.current.currentTime = 0;\n            beep.current.play();\n            \n            if (!globalState.isBreak) {\n\n                dispatch(setSeconds(globalState.breakLength * 60));\n                dispatch(modeBreak());\n     \n            } else {\n                dispatch(setSeconds(globalState.sessionLength * 60));\n                dispatch(modeSession());\n            }\n\n        }\n    }, [dispatch, globalState]);\n\n    const toggleTimer = () => {\n        if (globalState.isOn) dispatch(disable());\n        else dispatch(enable());\n    };\n\n    const resetToDefault = () => {\n        dispatch(reset());\n        beep.current.pause();\n        beep.current.currentTime = 0;\n    };\n\n    return (\n        <>\n            <div className=\"timer\">\n            <div className=\"timer-wrapper\">            \n                <div id=\"timer-label\">{globalState.isBreak ? 'Break' : 'Session'}</div>\n                <div id=\"time-left\">{getFormattedTime(globalState.secondsLeft)}</div>                \n            </div>\n         \n            <div className=\"timer-control\">\n                <button id=\"start_stop\" onClick={toggleTimer}>{globalState.isOn ? <IoMdPause /> : <IoIosPlay />}</button>\n                <button id=\"reset\" onClick={resetToDefault}><IoIosRefresh />\n                </button>\n            </div>\n            </div>\n\n            <audio ref={beep} id=\"beep\" preload=\"auto\" src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"></audio>\n        </>\n    )\n}\n","import React from 'react';\n\nexport function Footer() {\n\n    return (\n        <div className=\"footer\">\n        â“’ 2020 Made with <i class=\"far fa-heart\"></i> by{\" \"}\n         <a href=\"https://karen-developer.com\" target=\"_blank\">\n         <span className=\"karen\">Karen Chang</span>\n         </a>\n       </div>\n    );\n}\n","import React from 'react';\nimport { IconContext } from 'react-icons';\nimport { LengthController } from './LengthController';\nimport { TimerWrapper } from './TimerWrapper';\nimport { Footer } from './Footer';\nimport Fade from 'react-reveal/Fade';\nimport './Pomodoro.css';\n\nfunction Pomodoro() {\n\n    return (\n        <IconContext.Provider value={{ className: 'react-icons' }}>\n            <Fade top>\n            <div className=\"pomodoro-wrapper\">\n                <div className=\"pomodoro-container\">                 \n                    <LengthController mode=\"session\" /> \n                    <TimerWrapper />                    \n                    <LengthController mode=\"break\" />                                  \n                </div>\n                <div className=\"shadow\"></div>\n                <Footer />\n            </div>\n            </Fade>            \n        </IconContext.Provider>\n    );\n}\n\nexport default Pomodoro;\n","import React from 'react';\r\nimport Pomodoro from './components/Pomodoro';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Pomodoro />\r\n  );\r\n  \r\n}\r\n\r\nexport default App;\r\n","const timerReducer = (state = 1500, action) => {\n    switch(action.type) {\n        case 'SECONDS':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default timerReducer;","const sessionReducer = (state = 25, action) => {\n    switch(action.type) {\n        case 'SESSION':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default sessionReducer;","const breakReducer = (state = 5, action) => {\n    switch(action.type) {\n        case 'BREAK':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default breakReducer;","const activeReducer = (state = false, action) => {\n    switch(action.type) {\n        case 'ENABLE':\n            return true;\n        case 'DISABLE':\n            return false;\n        default:\n            return state;\n    }\n}\n\nexport default activeReducer;","const modeReducer = (state = false, action) => {\n    switch(action.type) {\n        case 'MODE-SESSION':\n            return false;\n        case 'MODE-BREAK':\n            return true;\n        default:\n            return state;\n    }\n}\n\nexport default modeReducer;","import secondsReducer from './secondsLeft';\nimport sessionReducer from './sessionLength';\nimport breakReducer from './breakLength';\nimport activeReducer from './isOn';\nimport modeReducer from './mode.js';\n\nimport { combineReducers } from 'redux';\n\nconst allReducers = combineReducers({\n    secondsLeft: secondsReducer,\n    sessionLength: sessionReducer,\n    breakLength: breakReducer,\n    isOn: activeReducer,\n    isBreak: modeReducer,\n});\n\nexport const rootReducer = (state, action) => {\n    if (action.type === 'RESET') {\n        state = undefined;\n    }\n    return allReducers(state, action)\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { createStore } from 'redux';\r\nimport { rootReducer } from './reducers';\r\nimport { Provider } from 'react-redux';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}